{"version":3,"sources":["../src/createTransaction.js"],"names":["log","hashPublicKey","getWalletPublicKey","getTrustedInput","startUntrustedHashTransactionInput","serializeTransaction","getTrustedInputBIP143","compressPublicKey","signTransaction","hashOutputFull","provideOutputFullChangePath","getAppAndVersion","DEFAULT_LOCKTIME","DEFAULT_SEQUENCE","SIGHASH_ALL","OP_DUP","OP_HASH160","HASH_SIZE","OP_EQUALVERIFY","OP_CHECKSIG","shouldUseTrustedInputForSegwit","defaultsSignTransaction","lockTime","sigHashType","segwit","additionals","onDeviceStreaming","_e","onDeviceSignatureGranted","onDeviceSignatureRequested","createTransaction","transport","arg","inputs","associatedKeysets","changePath","outputScriptHex","initialTimestamp","expiryHeight","useTrustedInputForSegwit","undefined","a","e","statusCode","notify","loop","i","length","index","total","progress","isDecred","includes","isXST","startTime","Date","now","sapling","bech32","useBip143","nullScript","Buffer","alloc","nullPrevout","defaultVersion","writeUInt32LE","trustedInputs","regularOutputs","signatures","publicKeys","firstRun","resuming","targetTransaction","version","timestamp","getTrustedInputCall","outputScript","from","input","trustedInput","sequence","push","value","outputs","nVersionGroupId","nExpiryHeight","extraData","map","script","prevout","result","r","path","publicKey","Math","floor","concat","pseudoTX","Object","assign","pseudoTrustedInputs","signature","witness","signatureSize","keySize","offset","slice","lockTimeBuffer","tmpScriptData","decredWitness","forEach","inputIndex","toString"],"mappings":"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","sourcesContent":["// @flow\n\nimport { log } from \"@ledgerhq/logs\";\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { hashPublicKey } from \"./hashPublicKey\";\nimport { getWalletPublicKey } from \"./getWalletPublicKey\";\nimport type { AddressFormat } from \"./getWalletPublicKey\";\nimport { getTrustedInput } from \"./getTrustedInput\";\nimport { startUntrustedHashTransactionInput } from \"./startUntrustedHashTransactionInput\";\nimport { serializeTransaction } from \"./serializeTransaction\";\nimport { getTrustedInputBIP143 } from \"./getTrustedInputBIP143\";\nimport { compressPublicKey } from \"./compressPublicKey\";\nimport { signTransaction } from \"./signTransaction\";\nimport { hashOutputFull, provideOutputFullChangePath } from \"./finalizeInput\";\nimport { getAppAndVersion } from \"./getAppAndVersion\";\nimport type { TransactionOutput, Transaction } from \"./types\";\nimport {\n  DEFAULT_LOCKTIME,\n  DEFAULT_SEQUENCE,\n  SIGHASH_ALL,\n  OP_DUP,\n  OP_HASH160,\n  HASH_SIZE,\n  OP_EQUALVERIFY,\n  OP_CHECKSIG,\n} from \"./constants\";\nimport { shouldUseTrustedInputForSegwit } from \"./shouldUseTrustedInputForSegwit\";\n\nexport type { AddressFormat };\n\nconst defaultsSignTransaction = {\n  lockTime: DEFAULT_LOCKTIME,\n  sigHashType: SIGHASH_ALL,\n  segwit: false,\n  additionals: [],\n  onDeviceStreaming: (_e) => {},\n  onDeviceSignatureGranted: () => {},\n  onDeviceSignatureRequested: () => {},\n};\n\n/**\n *\n */\nexport type CreateTransactionArg = {\n  inputs: Array<[Transaction, number, ?string, ?number]>,\n  associatedKeysets: string[],\n  changePath?: string,\n  outputScriptHex: string,\n  lockTime?: number,\n  sigHashType?: number,\n  segwit?: boolean,\n  initialTimestamp?: number,\n  additionals: Array<string>,\n  expiryHeight?: Buffer,\n  useTrustedInputForSegwit?: boolean,\n  onDeviceStreaming?: ({\n    progress: number,\n    total: number,\n    index: number,\n  }) => void,\n  onDeviceSignatureRequested?: () => void,\n  onDeviceSignatureGranted?: () => void,\n};\n\nexport async function createTransaction(\n  transport: Transport<*>,\n  arg: CreateTransactionArg\n) {\n  let {\n    inputs,\n    associatedKeysets,\n    changePath,\n    outputScriptHex,\n    lockTime,\n    sigHashType,\n    segwit,\n    initialTimestamp,\n    additionals,\n    expiryHeight,\n    useTrustedInputForSegwit,\n    onDeviceStreaming,\n    onDeviceSignatureGranted,\n    onDeviceSignatureRequested,\n  } = {\n    ...defaultsSignTransaction,\n    ...arg,\n  };\n\n  if (useTrustedInputForSegwit === undefined) {\n    try {\n      const a = await getAppAndVersion(transport);\n      useTrustedInputForSegwit = shouldUseTrustedInputForSegwit(a);\n    } catch (e) {\n      if (e.statusCode === 0x6d00) {\n        useTrustedInputForSegwit = false;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  // loop: 0 or 1 (before and after)\n  // i: index of the input being streamed\n  // i goes on 0...n, inluding n. in order for the progress value to go to 1\n  // we normalize the 2 loops to make a global percentage\n  const notify = (loop, i) => {\n    const { length } = inputs;\n    if (length < 3) return; // there is not enough significant event to worth notifying (aka just use a spinner)\n    const index = length * loop + i;\n    const total = 2 * length;\n    const progress = index / total;\n    onDeviceStreaming({ progress, total, index });\n  };\n\n  const isDecred = additionals.includes(\"decred\");\n  const isXST = additionals.includes(\"stealthcoin\");\n  let startTime = Date.now();\n  const sapling = additionals.includes(\"sapling\");\n  const bech32 = segwit && additionals.includes(\"bech32\");\n  let useBip143 =\n    segwit ||\n    (!!additionals &&\n      (additionals.includes(\"abc\") ||\n        additionals.includes(\"gold\") ||\n        additionals.includes(\"bip143\"))) ||\n    (!!expiryHeight && !isDecred);\n  // Inputs are provided as arrays of [transaction, output_index, optional redeem script, optional sequence]\n  // associatedKeysets are provided as arrays of [path]\n  const nullScript = Buffer.alloc(0);\n  const nullPrevout = Buffer.alloc(0);\n  const defaultVersion = Buffer.alloc(4);\n  !!expiryHeight && !isDecred\n    ? defaultVersion.writeUInt32LE(sapling ? 0x80000004 : 0x80000003, 0)\n    : isXST\n    ? defaultVersion.writeUInt32LE(2, 0)\n    : defaultVersion.writeUInt32LE(1, 0); // Default version to 2 for XST not to have timestamp\n  const trustedInputs: Array<*> = [];\n  const regularOutputs: Array<TransactionOutput> = [];\n  const signatures = [];\n  const publicKeys = [];\n  let firstRun = true;\n  const resuming = false;\n  const targetTransaction: Transaction = {\n    inputs: [],\n    version: defaultVersion,\n    timestamp: Buffer.alloc(0),\n  };\n\n  const getTrustedInputCall =\n    useBip143 && !useTrustedInputForSegwit\n      ? getTrustedInputBIP143\n      : getTrustedInput;\n  const outputScript = Buffer.from(outputScriptHex, \"hex\");\n\n  notify(0, 0);\n\n  // first pass on inputs to get trusted inputs\n  for (let input of inputs) {\n    if (!resuming) {\n      const trustedInput = await getTrustedInputCall(\n        transport,\n        input[1],\n        input[0],\n        additionals\n      );\n      log(\"hw\", \"got trustedInput=\" + trustedInput);\n      let sequence = Buffer.alloc(4);\n      sequence.writeUInt32LE(\n        input.length >= 4 && typeof input[3] === \"number\"\n          ? input[3]\n          : DEFAULT_SEQUENCE,\n        0\n      );\n      trustedInputs.push({\n        trustedInput: true,\n        value: Buffer.from(trustedInput, \"hex\"),\n        sequence,\n      });\n    }\n\n    const { outputs } = input[0];\n    const index = input[1];\n    if (outputs && index <= outputs.length - 1) {\n      regularOutputs.push(outputs[index]);\n    }\n\n    if (expiryHeight && !isDecred) {\n      targetTransaction.nVersionGroupId = Buffer.from(\n        sapling ? [0x85, 0x20, 0x2f, 0x89] : [0x70, 0x82, 0xc4, 0x03]\n      );\n      targetTransaction.nExpiryHeight = expiryHeight;\n      // For sapling : valueBalance (8), nShieldedSpend (1), nShieldedOutput (1), nJoinSplit (1)\n      // Overwinter : use nJoinSplit (1)\n      targetTransaction.extraData = Buffer.from(\n        sapling\n          ? [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n          : [0x00]\n      );\n    } else if (isDecred) {\n      targetTransaction.nExpiryHeight = expiryHeight;\n    }\n  }\n\n  targetTransaction.inputs = inputs.map((input) => {\n    let sequence = Buffer.alloc(4);\n    sequence.writeUInt32LE(\n      input.length >= 4 && typeof input[3] === \"number\"\n        ? input[3]\n        : DEFAULT_SEQUENCE,\n      0\n    );\n    return {\n      script: nullScript,\n      prevout: nullPrevout,\n      sequence,\n    };\n  });\n\n  if (!resuming) {\n    // Collect public keys\n    const result = [];\n    for (let i = 0; i < inputs.length; i++) {\n      const r = await getWalletPublicKey(transport, {\n        path: associatedKeysets[i],\n      });\n      notify(0, i + 1);\n      result.push(r);\n    }\n    for (let i = 0; i < result.length; i++) {\n      publicKeys.push(\n        compressPublicKey(Buffer.from(result[i].publicKey, \"hex\"))\n      );\n    }\n  }\n\n  if (initialTimestamp !== undefined) {\n    targetTransaction.timestamp = Buffer.alloc(4);\n    targetTransaction.timestamp.writeUInt32LE(\n      Math.floor(initialTimestamp + (Date.now() - startTime) / 1000),\n      0\n    );\n  }\n\n  onDeviceSignatureRequested();\n\n  if (useBip143) {\n    // Do the first run with all inputs\n    await startUntrustedHashTransactionInput(\n      transport,\n      true,\n      targetTransaction,\n      trustedInputs,\n      true,\n      !!expiryHeight,\n      additionals,\n      useTrustedInputForSegwit\n    );\n\n    if (!resuming && changePath) {\n      await provideOutputFullChangePath(transport, changePath);\n    }\n\n    await hashOutputFull(transport, outputScript);\n  }\n\n  if (!!expiryHeight && !isDecred) {\n    await signTransaction(transport, \"\", lockTime, SIGHASH_ALL, expiryHeight);\n  }\n\n  // Do the second run with the individual transaction\n  for (let i = 0; i < inputs.length; i++) {\n    const input = inputs[i];\n    let script =\n      inputs[i].length >= 3 && typeof input[2] === \"string\"\n        ? Buffer.from(input[2], \"hex\")\n        : !segwit\n        ? regularOutputs[i].script\n        : Buffer.concat([\n            Buffer.from([OP_DUP, OP_HASH160, HASH_SIZE]),\n            hashPublicKey(publicKeys[i]),\n            Buffer.from([OP_EQUALVERIFY, OP_CHECKSIG]),\n          ]);\n    let pseudoTX = Object.assign({}, targetTransaction);\n    let pseudoTrustedInputs = useBip143 ? [trustedInputs[i]] : trustedInputs;\n    if (useBip143) {\n      pseudoTX.inputs = [{ ...pseudoTX.inputs[i], script }];\n    } else {\n      pseudoTX.inputs[i].script = script;\n    }\n\n    await startUntrustedHashTransactionInput(\n      transport,\n      !useBip143 && firstRun,\n      pseudoTX,\n      pseudoTrustedInputs,\n      useBip143,\n      !!expiryHeight && !isDecred,\n      additionals,\n      useTrustedInputForSegwit\n    );\n\n    if (!useBip143) {\n      if (!resuming && changePath) {\n        await provideOutputFullChangePath(transport, changePath);\n      }\n      await hashOutputFull(transport, outputScript, additionals);\n    }\n\n    if (firstRun) {\n      onDeviceSignatureGranted();\n      notify(1, 0);\n    }\n\n    const signature = await signTransaction(\n      transport,\n      associatedKeysets[i],\n      lockTime,\n      sigHashType,\n      expiryHeight,\n      additionals\n    );\n    notify(1, i + 1);\n\n    signatures.push(signature);\n    targetTransaction.inputs[i].script = nullScript;\n    if (firstRun) {\n      firstRun = false;\n    }\n  }\n\n  // Populate the final input scripts\n  for (let i = 0; i < inputs.length; i++) {\n    if (segwit) {\n      targetTransaction.witness = Buffer.alloc(0);\n      if (!bech32) {\n        targetTransaction.inputs[i].script = Buffer.concat([\n          Buffer.from(\"160014\", \"hex\"),\n          hashPublicKey(publicKeys[i]),\n        ]);\n      }\n    } else {\n      const signatureSize = Buffer.alloc(1);\n      const keySize = Buffer.alloc(1);\n      signatureSize[0] = signatures[i].length;\n      keySize[0] = publicKeys[i].length;\n      targetTransaction.inputs[i].script = Buffer.concat([\n        signatureSize,\n        signatures[i],\n        keySize,\n        publicKeys[i],\n      ]);\n    }\n    let offset = useBip143 && !useTrustedInputForSegwit ? 0 : 4;\n    targetTransaction.inputs[i].prevout = trustedInputs[i].value.slice(\n      offset,\n      offset + 0x24\n    );\n  }\n\n  const lockTimeBuffer = Buffer.alloc(4);\n  lockTimeBuffer.writeUInt32LE(lockTime, 0);\n\n  var result = Buffer.concat([\n    serializeTransaction(\n      targetTransaction,\n      false,\n      targetTransaction.timestamp,\n      additionals\n    ),\n    outputScript,\n  ]);\n\n  if (segwit && !isDecred) {\n    var witness = Buffer.alloc(0);\n    for (var i = 0; i < inputs.length; i++) {\n      var tmpScriptData = Buffer.concat([\n        Buffer.from(\"02\", \"hex\"),\n        Buffer.from([signatures[i].length]),\n        signatures[i],\n        Buffer.from([publicKeys[i].length]),\n        publicKeys[i],\n      ]);\n      witness = Buffer.concat([witness, tmpScriptData]);\n    }\n    result = Buffer.concat([result, witness]);\n  }\n\n  // FIXME: In ZEC or KMD sapling lockTime is serialized before expiryHeight.\n  // expiryHeight is used only in overwinter/sapling so I moved lockTimeBuffer here\n  // and it should not break other coins because expiryHeight is false for them.\n  // Don't know about Decred though.\n  result = Buffer.concat([result, lockTimeBuffer]);\n\n  if (expiryHeight) {\n    result = Buffer.concat([\n      result,\n      targetTransaction.nExpiryHeight || Buffer.alloc(0),\n      targetTransaction.extraData || Buffer.alloc(0),\n    ]);\n  }\n\n  if (isDecred) {\n    let decredWitness = Buffer.from([targetTransaction.inputs.length]);\n    inputs.forEach((input, inputIndex) => {\n      decredWitness = Buffer.concat([\n        decredWitness,\n        Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]),\n        Buffer.from([0x00, 0x00, 0x00, 0x00]), //Block height\n        Buffer.from([0xff, 0xff, 0xff, 0xff]), //Block index\n        Buffer.from([targetTransaction.inputs[inputIndex].script.length]),\n        targetTransaction.inputs[inputIndex].script,\n      ]);\n    });\n\n    result = Buffer.concat([result, decredWitness]);\n  }\n\n  return result.toString(\"hex\");\n}\n"],"file":"createTransaction.js"}