{"version":3,"sources":["../src/signTransaction.js"],"names":["bip32asBuffer","signTransaction","transport","path","lockTime","sigHashType","expiryHeight","additionals","isDecred","includes","pathsBuffer","lockTimeBuffer","Buffer","alloc","writeUInt32BE","buffer","concat","from","send","then","result","length","slice"],"mappings":"AAEA,SAASA,aAAT,QAA8B,SAA9B;AAEA,OAAO,SAASC,eAAT,CACLC,SADK,EAELC,IAFK,EAGLC,QAHK,EAILC,WAJK,EAKLC,YALK,EAMLC,WAA0B,GAAG,EANxB,EAOY;AACjB,QAAMC,QAAQ,GAAGD,WAAW,CAACE,QAAZ,CAAqB,QAArB,CAAjB;AACA,QAAMC,WAAW,GAAGV,aAAa,CAACG,IAAD,CAAjC;AACA,QAAMQ,cAAc,GAAGC,MAAM,CAACC,KAAP,CAAa,CAAb,CAAvB;AACAF,EAAAA,cAAc,CAACG,aAAf,CAA6BV,QAA7B,EAAuC,CAAvC;AACA,MAAIW,MAAM,GAAGP,QAAQ,GACjBI,MAAM,CAACI,MAAP,CAAc,CACZN,WADY,EAEZC,cAFY,EAGZL,YAAY,IAAIM,MAAM,CAACK,IAAP,CAAY,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAZ,CAHJ,EAIZL,MAAM,CAACK,IAAP,CAAY,CAACZ,WAAD,CAAZ,CAJY,CAAd,CADiB,GAOjBO,MAAM,CAACI,MAAP,CAAc,CACZN,WADY,EAEZE,MAAM,CAACK,IAAP,CAAY,CAAC,IAAD,CAAZ,CAFY,EAGZN,cAHY,EAIZC,MAAM,CAACK,IAAP,CAAY,CAACZ,WAAD,CAAZ,CAJY,CAAd,CAPJ;;AAaA,MAAIC,YAAY,IAAI,CAACE,QAArB,EAA+B;AAC7BO,IAAAA,MAAM,GAAGH,MAAM,CAACI,MAAP,CAAc,CAACD,MAAD,EAAST,YAAT,CAAd,CAAT;AACD;;AACD,SAAOJ,SAAS,CAACgB,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuCH,MAAvC,EAA+CI,IAA/C,CAAqDC,MAAD,IAAY;AACrE,QAAIA,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;AACrBD,MAAAA,MAAM,CAAC,CAAD,CAAN,GAAY,IAAZ;AACA,aAAOA,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBF,MAAM,CAACC,MAAP,GAAgB,CAAhC,CAAP;AACD;;AACD,WAAOD,MAAP;AACD,GANM,CAAP;AAOD","sourcesContent":["// @flow\nimport type Transport from \"@ledgerhq/hw-transport\";\nimport { bip32asBuffer } from \"./bip32\";\n\nexport function signTransaction(\n  transport: Transport<*>,\n  path: string,\n  lockTime: number,\n  sigHashType: number,\n  expiryHeight?: Buffer,\n  additionals: Array<string> = []\n): Promise<Buffer> {\n  const isDecred = additionals.includes(\"decred\");\n  const pathsBuffer = bip32asBuffer(path);\n  const lockTimeBuffer = Buffer.alloc(4);\n  lockTimeBuffer.writeUInt32BE(lockTime, 0);\n  let buffer = isDecred\n    ? Buffer.concat([\n        pathsBuffer,\n        lockTimeBuffer,\n        expiryHeight || Buffer.from([0x00, 0x00, 0x00, 0x00]),\n        Buffer.from([sigHashType]),\n      ])\n    : Buffer.concat([\n        pathsBuffer,\n        Buffer.from([0x00]),\n        lockTimeBuffer,\n        Buffer.from([sigHashType]),\n      ]);\n  if (expiryHeight && !isDecred) {\n    buffer = Buffer.concat([buffer, expiryHeight]);\n  }\n  return transport.send(0xe0, 0x48, 0x00, 0x00, buffer).then((result) => {\n    if (result.length > 0) {\n      result[0] = 0x30;\n      return result.slice(0, result.length - 2);\n    }\n    return result;\n  });\n}\n"],"file":"signTransaction.js"}