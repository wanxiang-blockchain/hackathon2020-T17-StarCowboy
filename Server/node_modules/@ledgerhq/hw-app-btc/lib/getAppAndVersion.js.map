{"version":3,"sources":["../src/getAppAndVersion.js"],"names":["getAppAndVersion","transport","r","send","i","format","nameLength","name","slice","toString","versionLength","version","flagLength","flags"],"mappings":";;;;;;;AACA;;AACA;;;;AAEO,MAAMA,gBAAgB,GAAG,OAC9BC,SAD8B,KAEgC;AAC9D,QAAMC,CAAC,GAAG,MAAMD,SAAS,CAACE,IAAV,CAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,CAAhB;AACA,MAAIC,CAAC,GAAG,CAAR;AACA,QAAMC,MAAM,GAAGH,CAAC,CAACE,CAAC,EAAF,CAAhB;AACA,0BAAUC,MAAM,KAAK,CAArB,EAAwB,wCAAxB;AACA,QAAMC,UAAU,GAAGJ,CAAC,CAACE,CAAC,EAAF,CAApB;AACA,QAAMG,IAAI,GAAGL,CAAC,CAACM,KAAF,CAAQJ,CAAR,EAAYA,CAAC,IAAIE,UAAjB,EAA8BG,QAA9B,CAAuC,OAAvC,CAAb;AACA,QAAMC,aAAa,GAAGR,CAAC,CAACE,CAAC,EAAF,CAAvB;AACA,QAAMO,OAAO,GAAGT,CAAC,CAACM,KAAF,CAAQJ,CAAR,EAAYA,CAAC,IAAIM,aAAjB,EAAiCD,QAAjC,CAA0C,OAA1C,CAAhB;AACA,QAAMG,UAAU,GAAGV,CAAC,CAACE,CAAC,EAAF,CAApB;AACA,QAAMS,KAAK,GAAGX,CAAC,CAACM,KAAF,CAAQJ,CAAR,EAAYA,CAAC,IAAIQ,UAAjB,CAAd;AACA,SAAO;AAAEL,IAAAA,IAAF;AAAQI,IAAAA,OAAR;AAAiBE,IAAAA;AAAjB,GAAP;AACD,CAdM","sourcesContent":["// @flow\nimport invariant from \"invariant\";\nimport Transport from \"@ledgerhq/hw-transport\";\n\nexport const getAppAndVersion = async (\n  transport: Transport<*>\n): Promise<{ name: string, version: string, flags: number }> => {\n  const r = await transport.send(0xb0, 0x01, 0x00, 0x00);\n  let i = 0;\n  const format = r[i++];\n  invariant(format === 1, \"getAppAndVersion: format not supported\");\n  const nameLength = r[i++];\n  const name = r.slice(i, (i += nameLength)).toString(\"ascii\");\n  const versionLength = r[i++];\n  const version = r.slice(i, (i += versionLength)).toString(\"ascii\");\n  const flagLength = r[i++];\n  const flags = r.slice(i, (i += flagLength));\n  return { name, version, flags };\n};\n"],"file":"getAppAndVersion.js"}